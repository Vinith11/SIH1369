<%- include("partials/header") -%>
<%- include("navbar") -%>

    <div class="container mt-5 pt-3">
        <% if(item){ %>
            <div class="p-3 shadow-sm">
                <img class="bd-placeholder-img card-img-top img-fluid" src="/img/<%= item.image.data %>" role="img"
                    alt="<%= item.image.data %>">
                <div class="card-body mt-2">
                    <p class="card-text fs-3 fw-bold font-monospace">
                        <%= item.name %>
                    </p>
                    <p class="card-text description">
                        <%= item.description %>
                    </p>
                    <div class="d-flex justify-content-between align-items-center">
                        <!-- <div class="btn-group">
                            <a href="javascript:window.history.back()"
                                class="btn btn-sm btn-outline-secondary">Back</a>
                        </div> -->
                        <small class="text-body-secondary">Price: <span class="fw-bold">
                                <%= item.price %>â‚¹
                            </span></small>
                        <small class="text-body-secondary">Time needed: <span class="fw-bold">
                                <%= item.timeneeded %>
                            </span></small>
                            <% if(item.link != null){ %>
                        <a href="<%= item.link %>" class="btn btn-outline-secondary fw-bold" target="_blank">
                            Watch video
                            </a>
                            <%}%>
                    </div>
                    <div class="btn-group mt-3">
                        <a href="javascript:window.history.back()"
                            class="btn btn-sm btn-outline-secondary">Back</a>
                    </div>
                </div>
            </div>
        <% }else{ %>
            <h1>Project details note available.</h1>
        <% } %>
    </div>

    <!-- please recheck this form and make it once again. -->

    <div class="container rounded border border-0, shadow-sm my-4 p-4">
        <p class="fs-3 fw-bold font-monospace">CONTACT</p>

        <form class="needs-validation" name='contact' action="/projects/contact" method="post" onSubmit="return formValidation();" novalidate>
            <div class="form-row">
                <div class="col-md-4 mb-3">
                    <label for="validationCustom01">First name</label>
                    <input type="text" name="fname" class="form-control" id="validationCustom01" placeholder="First name" required>
                    <div class="invalid-feedback">
                        Please enter first name.
                    </div>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="validationCustom02">Last name</label>
                    <input type="text" name="lname" class="form-control" id="validationCustom02" placeholder="Last name" required>
                    <div class="invalid-feedback">
                        Please enter last name.
                    </div>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="validationCustomUsername">Phone number</label>
                    <div class="input-group">
                            <span class="input-group-text" id="basic-addon1">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-telephone" viewBox="0 0 16 16">
                                    <path d="M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z"></path>
                                </svg>
                            </span>
                        <input type="tel" name="phone" class="form-control" id="validationCustomUsername" placeholder="123-456-7890"
                            aria-describedby="inputGroupPrepend" required>
                        <div class="invalid-feedback">
                            Please choose a phone number.
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 mb-3">
                    <label for="validationCustom03">City</label>
                    <input type="text" name="city" class="form-control" id="validationCustom03" placeholder="City" required>
                    <div class="invalid-feedback">
                        Please provide a valid city.
                    </div>
                </div>
                <!-- <div class="col-md-3 mb-3">
                    <label for="validationCustom04">State</label>
                    <input type="text" name="state" class="form-control" id="validationCustom04" placeholder="State" required>
                    <div class="invalid-feedback">
                        Please provide a valid state.
                    </div>
                </div> -->
                <div class="col-md-3 mb-3">
                    <label for="validationCustom05">Zip</label>
                    <input type="text" name="zip" class="form-control" id="validationCustom05" placeholder="Zip" required>
                    <div class="invalid-feedback">
                        Please provide a valid zip.
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="form-check">
                    <input class="form-check-input" name="nearby" type="checkbox" value="true" id="invalidCheck" required>
                    <label class="form-check-label" for="invalidCheck">
                        I live near by Belgaum city
                    </label>
                    <div class="invalid-feedback">
                        You must agree before submitting.
                    </div>
                </div>
            </div>
            <button class="btn btn-secondary" name="itemID" value="<%= item._id %>" type="submit">Submit form</button>
        </form>

        <p class="fw-bold mt-3">Sorry for inconvenience we are only accepting request from those who live nearby
            Belgaum city.</p>
    </div>

    <!-- modal -->
    <div class="modal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Message</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="model-message"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <!-- <button type="button" class="btn btn-primary">Save changes</button> -->
                </div>
            </div>
        </div>
    </div>

    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        let message = ''

        function formValidation() {
            var fname = document.contact.fname;
            var lname = document.contact.lname;
            var phone = document.contact.phone;
            var city = document.contact.city;
            var zip = document.contact.zip;
            var nearby = document.contact.nearby;

            if (fnameValidation(fname)) {
                if (lnameValidation(lname)) {
                    if (phoneValidation(phone)) {
                        if (cityValidation(city)) {
                            if (zipValidation(zip)) {
                                if (nearbyValidation(nearby)) {
                                    return true;
                                }
                            }
                        }
                    }
                }
            }

            showMessageModal();
            
            return false;

        }

        function showMessageModal() {
            if (message.length > 0) {
                // Set the message content in the modal
                document.getElementById("model-message").innerHTML = message;
                
                // Use JavaScript to trigger the modal display
                var modal = new bootstrap.Modal(document.querySelector(".modal"));
                modal.show();
            }
        }

        function fnameValidation(fname){
            var fnameLen = fname.value.length;
            if (fname == 0 || fnameLen >= 15 || fnameLen < 4) {
                //alert("User first name should not be empty / length be between " + 2 + " to " + 15);
                message = "User first name should not be empty / length be between " + 2 + " to " + 15;
                fname.focus();
                return false;
            }
            return true;
        }

        function lnameValidation(lname){
            var lnameLen = lname.value.length;
            if (lname == 0 || lnameLen >= 20 || lnameLen < 1) {
                //alert("User last name should not be empty / length be between " + 1 + " to " + 20);
                message = "User last name should not be empty / length be between " + 1 + " to " + 20;
                lname.focus();
                return false;
            }
            return true;
        }

        function phoneValidation(phone) {
            var numbers = /^[0-9]+$/;
            if (phone.value.match(numbers)) {
                return true;
            }
            else {
                //alert('phone number must have numeric characters only');
                message = 'phone number must have numeric characters only';
                phone.focus();
                return false;
            }
        }

        function cityValidation(city){
            var cityLen = city.value.length;
            if (cityLen == 0 || cityLen >= 20 || cityLen < 3) {
                //alert("User city name should not be empty / length be between " + 3 + " to " + 20);
                message = "User city name should not be empty / length be between " + 3 + " to " + 20;
                city.focus();
                return false;
            }
            return true;
        }

        function zipValidation(zip) {
            var numbers = /^[0-9]+$/;
            if (zip.value.match(numbers)) {
                return true;
            }
            else {
                //alert('ZIP code must have numeric characters only');
                message = 'ZIP code must have numeric characters only';
                zip.focus();
                return false;
            }
        }

        // function nearbyValidation(nearby){
        //     var nearbyLen = nearby.value.length;
        //     if(nearbyLen == 0){
        //         message = "please check the box.";
        //         nearby.focus();
        //         return false;
        //     }
        //     return true;
        // }
    </script>

<%- include("partials/footer") -%>